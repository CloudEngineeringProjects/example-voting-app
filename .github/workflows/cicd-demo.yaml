name: Deploy to AKS

on:
  pull_request:
    types:
      - closed
    branches:
      - main

env:
  ACR_NAME: ${{ secrets.ACR_NAME }}
  RESOURCE_GROUP: ${{ secrets.RESOURCE_GROUP }}
  CLUSTER_NAME: ${{ secrets.CLUSTER_NAME }}

jobs:
  build-and-push:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v4

    - name: Log in to Azure
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Log in to ACR
      run: az acr login --name $ACR_NAME

    - name: Build and Push Vote Docker Image
      run: |
        IMAGE_TAG=$(date +%s)
        # Build Docker image for the Vote app, including the requirements.txt
        docker build -t $ACR_NAME.azurecr.io/votingapp/vote:$IMAGE_TAG -f vote/Dockerfile ./vote
        docker push $ACR_NAME.azurecr.io/votingapp/vote:$IMAGE_TAG
        echo "VOTE_IMAGE_TAG=$IMAGE_TAG" >> $GITHUB_ENV

    - name: Build and Push Result Docker Image
      run: |
        IMAGE_TAG=$(date +%s)
        # Build Docker image for the Result app
        docker build -t $ACR_NAME.azurecr.io/votingapp/result:$IMAGE_TAG -f result/Dockerfile ./result
        docker push $ACR_NAME.azurecr.io/votingapp/result:$IMAGE_TAG
        echo "RESULT_IMAGE_TAG=$IMAGE_TAG" >> $GITHUB_ENV

  deploy-to-aks:
    name: CICD demo Deployment to AKS
    runs-on: ubuntu-latest
    needs: build-and-push

    steps:
    - name: Checkout Code
      uses: actions/checkout@v4

    - name: Log in to Azure
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Get AKS Credentials
      run: az aks get-credentials --resource-group $RESOURCE_GROUP --name $CLUSTER_NAME

    - name: Deploy to AKS
      run: |
        kubectl apply -f k8s-specifications
